---
NeuralNetTrainer:
  preprocess:
    path_train_df: '/datasets/train_data/train.csv'
    path_test_df: '/datasets/train_data/test.csv'
    dummies: True
    multilabelstratifiedkfold: True
    nfolds: 10
    holdout: True
    holdout_size: 0.2
    seed: 2020
    augment_predictions: False
    datagen_config:   # Attributes should be set to False if do not want to augment training!
      featurewise_center: False    # set input mean to 0 over the dataset
      samplewise_center: False    # set each sample mean to 0
      featurewise_std_normalization: False    # divide inputs by std of the dataset
      samplewise_std_normalization: False    # divide each input by its std
      zca_whitening: False    # apply ZCA whitening
      rotation_range: 0.0    # randomly rotate images in the range (degrees, 0 to 180)
      zoom_range: 0.0    # Randomly zoom image
      width_shift_range: 0.0    # randomly shift images horizontally (fraction of total width)
      height_shift_range: 0.0    # randomly shift images vertically (fraction of total height)
      horizontal_flip: False    # randomly flip images
      vertical_flip: False    # randomly flip images
    train_valid_generator:
      directory: '/datasets/train_images_cropped/'
      x_col: 'image_id'
      y_col:
        - grapheme_root
        - vowel_diacritic
        - consonant_diacritic
      class_mode: 'multi_output'
      batch_size: 128
      color_mode: 'rgb'
      target_size: !!python/tuple [160, 160]
      shuffle: True
    holdout_generator:
      directory: '/datasets/train_images_cropped/'
      x_col: 'image_id'
      y_col:
        - grapheme_root
        - vowel_diacritic
        - consonant_diacritic
      class_mode: 'multi_output'
      batch_size: 128
      color_mode: 'rgb'
      target_size: !!python/tuple [160, 160]
      shuffle: False
    test_generator:
      directory: '/data/test_images/'
      target_size: !!python/tuple [160, 160]
      shuffle: False
      class_mode: !!python/none
      batch_size: 128
    #    seed: 7              # Can be used in Test-Time Augmentation?
    cutmix: False
    noisy_student:   # Should be modified! CPY IMAGES TO TRAIN_IMAGES_CROPPED
    # Maybe cropped images should be perfectly modifeid to original cropping version!!!
      noisy_student_training: True
      path_external_df: '/datasets/train_data/external_images.csv'
      noisy_student_generator:
        directory: '/datasets/train_images_cropped/'
        x_col: 'image_id'
        y_col: !!python/none
        target_size: !!python/tuple [160, 160]
        color_mode: 'rgb'
        shuffle: False
        class_mode: !!python/none
        batch_size: 128

  model:
    base_model: 'densenet121'
    input_shape: !!python/tuple [160, 160, 3]
    loss:
      root: 'categorical_crossentropy'
      vowel: 'categorical_crossentropy'
      consonant: 'categorical_crossentropy'
    loss_weights:                              # Tunable!!
      root: 0.6
      vowel: 0.2
      consonant: 0.2

  callbacks:
    reducelr:
      monitor: 'val_root_loss'
      patience: 5
      verbose: 1
      factor: 0.5
      min_lr: 0.00001
    earlystop:
      monitor: 'val_root_recall'
      patience: 10
      min_delta: 0.0
      verbose: 1
      mode: 'max'
    modelcp:
      filepath: '/datasets/saved_models/'
      save_best_only: True
      monitor: 'val_root_recall'
      mode: 'max'
    csvlog:
      filename: '/artifacts/densenet121/'
    experiment_name: 'densenet121_noisy_student_test'         # Modify this for new log files!

  train:
    epochs: 200

  noisy_student:
    noisy_student_training: True
    student_iterations: 1
    selection_threshold: 0.3

  test_code: True

  test:
    tta: False
    tta_steps: 5
    path_save_config: '/datasets/predictions_config/'
    path_predictions: '/datasets/predictions/'


NoisyStudentTrainer:
  model:
    base_model: 'efficientnetb3'
    input_shape: !!python/tuple [160, 160, 3]
    loss:
      root: 'categorical_crossentropy'
      vowel: 'categorical_crossentropy'
      consonant: 'categorical_crossentropy'
    loss_weights:                              # Tunable!!
      root: 0.6
      vowel: 0.2
      consonant: 0.2

  callbacks:
    reducelr:
      monitor: 'val_root_loss'
      patience: 5
      verbose: 1
      factor: 0.5
      min_lr: 0.00001
    earlystop:
      monitor: 'val_root_recall'
      patience: 10
      min_delta: 0.0
      verbose: 1
      mode: 'max'
    modelcp:
      filepath: '/datasets/saved_models/noisy_students/'
      save_best_only: True
      monitor: 'val_root_recall'
      mode: 'max'
    csvlog:
      filename: '/artifacts/noisy_students/'
    experiment_name: 'efficientnetb3_noisy_student'

  train:
    epochs: 200

  test_code: True

  test:
    path_save_config: '/datasets/predictions_config/noisy_students/'
    path_predictions: '/datasets/predictions/noisy_students/'
