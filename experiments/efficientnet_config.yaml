---
preprocess:
  path_train_df: '/datasets/train_data/train.csv'
  dummies: True
  datagen_config:
    featurewise_center: False    # set input mean to 0 over the dataset
    samplewise_center: False    # set each sample mean to 0
    featurewise_std_normalization: False    # divide inputs by std of the dataset
    samplewise_std_normalization: False    # divide each input by its std
    zca_whitening: False    # apply ZCA whitening
    rotation_range: 8    # randomly rotate images in the range (degrees, 0 to 180)
    zoom_range: 0.15    # Randomly zoom image
    width_shift_range: 0.15    # randomly shift images horizontally (fraction of total width)
    height_shift_range: 0.15    # randomly shift images vertically (fraction of total height)
    horizontal_flip: False    # randomly flip images
    vertical_flip: False    # randomly flip images
  train_valid_generator:
    directory: '/datasets/train_images/'
    x_col: 'image_id'
    y_col:
      - grapheme_root
      - vowel_diacritic
      - consonant_diacritic
    class_mode: 'multi_output'
    batch_size: 256
    color_mode: 'grayscale'

model:
  base_model: 'efficientnetb3'
  input_shape: !!python/tuple [137, 236, 3]
  metrics:
    root: 'accuracy'
    vowel: 'accuracy'
    consonant: 'accuracy'
  loss:
    root: 'categorical_crossentropy'
    vowel: 'categorical_crossentropy'
    consonant: 'categorical_crossentropy'
  loss_weights:
    root: 0.333
    vowel: 0.333
    consonant: 0.333

callbacks:
  reducelr:
    monitor: 'val_root_loss'
    patience: 3
    verbose: 1
    factor: 0.5
    min_lr: 0.00001
  earlystop:
    monitor: 'val_root_accuracy'
    patience: 30
    min_delta: 0
    verbose: 1
    mode: 'auto'
  modelcp:
    filepath: '/datasets/saved_models/'
    save_best_only: True
    mode: 'auto'
  csvlog:
    filename: '/artifacts/efficientnet/'

  experiment_name: 'efficientnetb3_first'

train:
  epochs: 30
